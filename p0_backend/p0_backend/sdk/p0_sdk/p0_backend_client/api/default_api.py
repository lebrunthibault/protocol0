# coding: utf-8

"""
    P0 backend Client

    P0 backend Client  # noqa: E501

    The version of the OpenAPI document: 1.0.0
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import json


# noinspection Mypy,DuplicatedCode
class P0BackendClient(object):
    """NOTE: This class is auto generated by OpenAPI Generator
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    def __init__(self, send_midi):
        self._send_midi = send_midi

    def _send_dict_as_midi(self, dict):
        # type: (dict) -> None
        message = json.dumps(dict)
        b = bytearray(message.encode())
        b.insert(0, 0xF0)
        b.append(0xF7)
        self._send_midi(tuple(b))

    def activate_rev2_editor(self, ):  # noqa: E501
        # type: () -> None
        """
            activate_rev2_editor  # noqa: E501
        """

        dict = {
            "method": "activate_rev2_editor",
            "args": {
                
            }
        }

        self._send_dict_as_midi(dict)

    def analyze_test_audio_clip_jitter(self, clip_path, ):  # noqa: E501
        # type: (str, ) -> None
        """
            analyze_test_audio_clip_jitter  # noqa: E501
        """

        dict = {
            "method": "analyze_test_audio_clip_jitter",
            "args": {
                "clip_path": clip_path, 
            }
        }

        self._send_dict_as_midi(dict)

    def clear_arrangement(self, ):  # noqa: E501
        # type: () -> None
        """
            clear_arrangement  # noqa: E501
        """

        dict = {
            "method": "clear_arrangement",
            "args": {
                
            }
        }

        self._send_dict_as_midi(dict)

    def click(self, x, y, ):  # noqa: E501
        # type: (int, int, ) -> None
        """
            click  # noqa: E501
        """

        dict = {
            "method": "click",
            "args": {
                "x": x, "y": y, 
            }
        }

        self._send_dict_as_midi(dict)

    def click_focused_track(self, ):  # noqa: E501
        # type: () -> None
        """
            click_focused_track  # noqa: E501
        """

        dict = {
            "method": "click_focused_track",
            "args": {
                
            }
        }

        self._send_dict_as_midi(dict)

    def click_vertical_zone(self, x, y, ):  # noqa: E501
        # type: (int, int, ) -> None
        """
            click_vertical_zone  # noqa: E501
        """

        dict = {
            "method": "click_vertical_zone",
            "args": {
                "x": x, "y": y, 
            }
        }

        self._send_dict_as_midi(dict)

    def close_explorer_window(self, title, ):  # noqa: E501
        # type: (str, ) -> None
        """
            close_explorer_window  # noqa: E501
        """

        dict = {
            "method": "close_explorer_window",
            "args": {
                "title": title, 
            }
        }

        self._send_dict_as_midi(dict)

    def close_samples_windows(self, ):  # noqa: E501
        # type: () -> None
        """
            close_samples_windows  # noqa: E501
        """

        dict = {
            "method": "close_samples_windows",
            "args": {
                
            }
        }

        self._send_dict_as_midi(dict)

    def close_set(self, id, ):  # noqa: E501
        # type: (str, ) -> None
        """
            close_set  # noqa: E501
        """

        dict = {
            "method": "close_set",
            "args": {
                "id": id, 
            }
        }

        self._send_dict_as_midi(dict)

    def crop_clip(self, ):  # noqa: E501
        # type: () -> None
        """
            crop_clip  # noqa: E501
        """

        dict = {
            "method": "crop_clip",
            "args": {
                
            }
        }

        self._send_dict_as_midi(dict)

    def delete_saved_track(self, track_name, ):  # noqa: E501
        # type: (str, ) -> None
        """
            delete_saved_track  # noqa: E501
        """

        dict = {
            "method": "delete_saved_track",
            "args": {
                "track_name": track_name, 
            }
        }

        self._send_dict_as_midi(dict)

    def drag_matching_track(self, ):  # noqa: E501
        # type: () -> None
        """
            drag_matching_track  # noqa: E501
        """

        dict = {
            "method": "drag_matching_track",
            "args": {
                
            }
        }

        self._send_dict_as_midi(dict)

    def flatten_track(self, ):  # noqa: E501
        # type: () -> None
        """
            flatten_track  # noqa: E501
        """

        dict = {
            "method": "flatten_track",
            "args": {
                
            }
        }

        self._send_dict_as_midi(dict)

    def hide_plugins(self, ):  # noqa: E501
        # type: () -> None
        """
            hide_plugins  # noqa: E501
        """

        dict = {
            "method": "hide_plugins",
            "args": {
                
            }
        }

        self._send_dict_as_midi(dict)

    def load_instrument_track(self, instrument_name, ):  # noqa: E501
        # type: (str, ) -> None
        """
            load_instrument_track  # noqa: E501
        """

        dict = {
            "method": "load_instrument_track",
            "args": {
                "instrument_name": instrument_name, 
            }
        }

        self._send_dict_as_midi(dict)

    def load_sample_in_simpler(self, sample_path, ):  # noqa: E501
        # type: (str, ) -> None
        """
            load_sample_in_simpler  # noqa: E501
        """

        dict = {
            "method": "load_sample_in_simpler",
            "args": {
                "sample_path": sample_path, 
            }
        }

        self._send_dict_as_midi(dict)

    def move_to(self, x, y, ):  # noqa: E501
        # type: (int, int, ) -> None
        """
            move_to  # noqa: E501
        """

        dict = {
            "method": "move_to",
            "args": {
                "x": x, "y": y, 
            }
        }

        self._send_dict_as_midi(dict)

    def notify_set_state(self, set_data, ):  # noqa: E501
        # type: (object, ) -> None
        """
            notify_set_state  # noqa: E501
        """

        dict = {
            "method": "notify_set_state",
            "args": {
                "set_data": set_data, 
            }
        }

        self._send_dict_as_midi(dict)

    def ping(self, ):  # noqa: E501
        # type: () -> None
        """
            ping  # noqa: E501
        """

        dict = {
            "method": "ping",
            "args": {
                
            }
        }

        self._send_dict_as_midi(dict)

    def post_activate_rev2_editor(self, ):  # noqa: E501
        # type: () -> None
        """
            post_activate_rev2_editor  # noqa: E501
        """

        dict = {
            "method": "post_activate_rev2_editor",
            "args": {
                
            }
        }

        self._send_dict_as_midi(dict)

    def reload_ableton(self, ):  # noqa: E501
        # type: () -> None
        """
            reload_ableton  # noqa: E501
        """

        dict = {
            "method": "reload_ableton",
            "args": {
                
            }
        }

        self._send_dict_as_midi(dict)

    def save_set(self, ):  # noqa: E501
        # type: () -> None
        """
            save_set  # noqa: E501
        """

        dict = {
            "method": "save_set",
            "args": {
                
            }
        }

        self._send_dict_as_midi(dict)

    def save_track_to_sub_tracks(self, ):  # noqa: E501
        # type: () -> None
        """
            save_track_to_sub_tracks  # noqa: E501
        """

        dict = {
            "method": "save_track_to_sub_tracks",
            "args": {
                
            }
        }

        self._send_dict_as_midi(dict)

    def search(self, search, ):  # noqa: E501
        # type: (str, ) -> None
        """
            search  # noqa: E501
        """

        dict = {
            "method": "search",
            "args": {
                "search": search, 
            }
        }

        self._send_dict_as_midi(dict)

    def select(self, question, options, vertical=True, color='INFO'):  # noqa: E501
        # type: (str, object, bool, str, ) -> None
        """
            select  # noqa: E501
        """

        dict = {
            "method": "select",
            "args": {
                "question": question, "options": options, "vertical": vertical, "color": color, 
            }
        }

        self._send_dict_as_midi(dict)

    def select_and_copy(self, ):  # noqa: E501
        # type: () -> None
        """
            select_and_copy  # noqa: E501
        """

        dict = {
            "method": "select_and_copy",
            "args": {
                
            }
        }

        self._send_dict_as_midi(dict)

    def select_and_paste(self, ):  # noqa: E501
        # type: () -> None
        """
            select_and_paste  # noqa: E501
        """

        dict = {
            "method": "select_and_paste",
            "args": {
                
            }
        }

        self._send_dict_as_midi(dict)

    def set_clip_file_path(self, file_path, ):  # noqa: E501
        # type: (str, ) -> None
        """
            set_clip_file_path  # noqa: E501
        """

        dict = {
            "method": "set_clip_file_path",
            "args": {
                "file_path": file_path, 
            }
        }

        self._send_dict_as_midi(dict)

    def set_envelope_loop_length(self, length, ):  # noqa: E501
        # type: (int, ) -> None
        """
            set_envelope_loop_length  # noqa: E501
        """

        dict = {
            "method": "set_envelope_loop_length",
            "args": {
                "length": length, 
            }
        }

        self._send_dict_as_midi(dict)

    def show_error(self, message, ):  # noqa: E501
        # type: (str, ) -> None
        """
            show_error  # noqa: E501
        """

        dict = {
            "method": "show_error",
            "args": {
                "message": message, 
            }
        }

        self._send_dict_as_midi(dict)

    def show_hide_plugins(self, ):  # noqa: E501
        # type: () -> None
        """
            show_hide_plugins  # noqa: E501
        """

        dict = {
            "method": "show_hide_plugins",
            "args": {
                
            }
        }

        self._send_dict_as_midi(dict)

    def show_info(self, message, centered=False):  # noqa: E501
        # type: (str, bool, ) -> None
        """
            show_info  # noqa: E501
        """

        dict = {
            "method": "show_info",
            "args": {
                "message": message, "centered": centered, 
            }
        }

        self._send_dict_as_midi(dict)

    def show_plugins(self, ):  # noqa: E501
        # type: () -> None
        """
            show_plugins  # noqa: E501
        """

        dict = {
            "method": "show_plugins",
            "args": {
                
            }
        }

        self._send_dict_as_midi(dict)

    def show_sample_category(self, category, ):  # noqa: E501
        # type: (str, ) -> None
        """
            show_sample_category  # noqa: E501
        """

        dict = {
            "method": "show_sample_category",
            "args": {
                "category": category, 
            }
        }

        self._send_dict_as_midi(dict)

    def show_saved_tracks(self, ):  # noqa: E501
        # type: () -> None
        """
            show_saved_tracks  # noqa: E501
        """

        dict = {
            "method": "show_saved_tracks",
            "args": {
                
            }
        }

        self._send_dict_as_midi(dict)

    def show_success(self, message, centered=False):  # noqa: E501
        # type: (str, bool, ) -> None
        """
            show_success  # noqa: E501
        """

        dict = {
            "method": "show_success",
            "args": {
                "message": message, "centered": centered, 
            }
        }

        self._send_dict_as_midi(dict)

    def show_warning(self, message, centered=False):  # noqa: E501
        # type: (str, bool, ) -> None
        """
            show_warning  # noqa: E501
        """

        dict = {
            "method": "show_warning",
            "args": {
                "message": message, "centered": centered, 
            }
        }

        self._send_dict_as_midi(dict)

    def start_profiling_single_measurement(self, ):  # noqa: E501
        # type: () -> None
        """
            start_profiling_single_measurement  # noqa: E501
        """

        dict = {
            "method": "start_profiling_single_measurement",
            "args": {
                
            }
        }

        self._send_dict_as_midi(dict)

    def start_set_profiling(self, ):  # noqa: E501
        # type: () -> None
        """
            start_set_profiling  # noqa: E501
        """

        dict = {
            "method": "start_set_profiling",
            "args": {
                
            }
        }

        self._send_dict_as_midi(dict)

    def stop_midi_server(self, ):  # noqa: E501
        # type: () -> None
        """
            stop_midi_server  # noqa: E501
        """

        dict = {
            "method": "stop_midi_server",
            "args": {
                
            }
        }

        self._send_dict_as_midi(dict)

    def tail_logs(self, ):  # noqa: E501
        # type: () -> None
        """
            tail_logs  # noqa: E501
        """

        dict = {
            "method": "tail_logs",
            "args": {
                
            }
        }

        self._send_dict_as_midi(dict)

    def toggle_ableton_button(self, x, y, activate=False):  # noqa: E501
        # type: (int, int, bool, ) -> None
        """
            toggle_ableton_button  # noqa: E501
        """

        dict = {
            "method": "toggle_ableton_button",
            "args": {
                "x": x, "y": y, "activate": activate, 
            }
        }

        self._send_dict_as_midi(dict)
