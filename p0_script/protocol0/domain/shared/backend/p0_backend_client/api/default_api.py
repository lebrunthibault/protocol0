# coding: utf-8

"""
    p0_backend

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 1.0.0
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import json


# noinspection Mypy,DuplicatedCode
class P0BackendClient(object):
    """NOTE: This class is auto generated by OpenAPI Generator
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    def __init__(self, send_midi):
        self._send_midi = send_midi

    def _send_dict_as_midi(self, dict):
        # type: (dict) -> None
        message = json.dumps(dict)
        b = bytearray(message.encode())
        b.insert(0, 0xF0)
        b.append(0xF7)
        self._send_midi(tuple(b))

    def actions(self, ):  # noqa: E501
        # type: () -> None
        """
            Actions  # noqa: E501
        """

        dict = {
            "method": "actions",
            "args": {
                
            }
        }

        self._send_dict_as_midi(dict)

    def activate_rev2_editor(self, ):  # noqa: E501
        # type: () -> None
        """
             Activate Rev2 Editor  # noqa: E501
        """

        dict = {
            "method": "activate_rev2_editor",
            "args": {
                
            }
        }

        self._send_dict_as_midi(dict)

    def analyze_test_audio_clip_jitter(self, clip_path, ):  # noqa: E501
        # type: (str, ) -> None
        """
             Analyze Test Audio Clip Jitter  # noqa: E501
        """

        dict = {
            "method": "analyze_test_audio_clip_jitter",
            "args": {
                "clip_path": clip_path, 
            }
        }

        self._send_dict_as_midi(dict)

    def arm(self, ):  # noqa: E501
        # type: () -> None
        """
            Arm  # noqa: E501
        """

        dict = {
            "method": "arm",
            "args": {
                
            }
        }

        self._send_dict_as_midi(dict)

    def bounce_session_to_arrangement(self, ):  # noqa: E501
        # type: () -> None
        """
             Bounce Session To Arrangement  # noqa: E501
        """

        dict = {
            "method": "bounce_session_to_arrangement",
            "args": {
                
            }
        }

        self._send_dict_as_midi(dict)

    def bounce_track_to_audio(self, ):  # noqa: E501
        # type: () -> None
        """
             Bounce Track To Audio  # noqa: E501
        """

        dict = {
            "method": "bounce_track_to_audio",
            "args": {
                
            }
        }

        self._send_dict_as_midi(dict)

    def capture_midi(self, ):  # noqa: E501
        # type: () -> None
        """
            Capture Midi  # noqa: E501
        """

        dict = {
            "method": "capture_midi",
            "args": {
                
            }
        }

        self._send_dict_as_midi(dict)

    def check_audio_export_valid(self, ):  # noqa: E501
        # type: () -> None
        """
            Check Audio Export Valid  # noqa: E501
        """

        dict = {
            "method": "check_audio_export_valid",
            "args": {
                
            }
        }

        self._send_dict_as_midi(dict)

    def click(self, x, y, ):  # noqa: E501
        # type: (int, int, ) -> None
        """
             Click  # noqa: E501
        """

        dict = {
            "method": "click",
            "args": {
                "x": x, "y": y, 
            }
        }

        self._send_dict_as_midi(dict)

    def click_focused_track(self, ):  # noqa: E501
        # type: () -> None
        """
             Click Focused Track  # noqa: E501
        """

        dict = {
            "method": "click_focused_track",
            "args": {
                
            }
        }

        self._send_dict_as_midi(dict)

    def click_vertical_zone(self, x, y, ):  # noqa: E501
        # type: (int, int, ) -> None
        """
             Click Vertical Zone  # noqa: E501
        """

        dict = {
            "method": "click_vertical_zone",
            "args": {
                "x": x, "y": y, 
            }
        }

        self._send_dict_as_midi(dict)

    def close_explorer_window(self, title, ):  # noqa: E501
        # type: (str, ) -> None
        """
             Close Explorer Window  # noqa: E501
        """

        dict = {
            "method": "close_explorer_window",
            "args": {
                "title": title, 
            }
        }

        self._send_dict_as_midi(dict)

    def close_samples_windows(self, ):  # noqa: E501
        # type: () -> None
        """
             Close Samples Windows  # noqa: E501
        """

        dict = {
            "method": "close_samples_windows",
            "args": {
                
            }
        }

        self._send_dict_as_midi(dict)

    def close_set(self, filename, ):  # noqa: E501
        # type: (str, ) -> None
        """
            Close Set  # noqa: E501
        """

        dict = {
            "method": "close_set",
            "args": {
                "filename": filename, 
            }
        }

        self._send_dict_as_midi(dict)

    def color_clip_with_automation(self, ):  # noqa: E501
        # type: () -> None
        """
             Color Clip With Automation  # noqa: E501
        """

        dict = {
            "method": "color_clip_with_automation",
            "args": {
                
            }
        }

        self._send_dict_as_midi(dict)

    def crop_clip(self, ):  # noqa: E501
        # type: () -> None
        """
             Crop Clip  # noqa: E501
        """

        dict = {
            "method": "crop_clip",
            "args": {
                
            }
        }

        self._send_dict_as_midi(dict)

    def delete_saved_track(self, track_name, ):  # noqa: E501
        # type: (str, ) -> None
        """
             Delete Saved Track  # noqa: E501
        """

        dict = {
            "method": "delete_saved_track",
            "args": {
                "track_name": track_name, 
            }
        }

        self._send_dict_as_midi(dict)

    def drag_matching_track(self, ):  # noqa: E501
        # type: () -> None
        """
             Drag Matching Track  # noqa: E501
        """

        dict = {
            "method": "drag_matching_track",
            "args": {
                
            }
        }

        self._send_dict_as_midi(dict)

    def drum_rack_to_simpler(self, ):  # noqa: E501
        # type: () -> None
        """
            Drum Rack To Simpler  # noqa: E501
        """

        dict = {
            "method": "drum_rack_to_simpler",
            "args": {
                
            }
        }

        self._send_dict_as_midi(dict)

    def edit_automation_value(self, ):  # noqa: E501
        # type: () -> None
        """
             Edit Automation Value  # noqa: E501
        """

        dict = {
            "method": "edit_automation_value",
            "args": {
                
            }
        }

        self._send_dict_as_midi(dict)

    def execute_action(self, group_id, action_id, ):  # noqa: E501
        # type: (int, int, ) -> None
        """
            Execute Action  # noqa: E501
        """

        dict = {
            "method": "execute_action",
            "args": {
                "group_id": group_id, "action_id": action_id, 
            }
        }

        self._send_dict_as_midi(dict)

    def fire_scene_to_last_position(self, ):  # noqa: E501
        # type: () -> None
        """
            Fire Scene To Last Position  # noqa: E501
        """

        dict = {
            "method": "fire_scene_to_last_position",
            "args": {
                
            }
        }

        self._send_dict_as_midi(dict)

    def fire_scene_to_position(self, bar_length=0):  # noqa: E501
        # type: (int, ) -> None
        """
            Fire Scene To Position  # noqa: E501
        """

        dict = {
            "method": "fire_scene_to_position",
            "args": {
                "bar_length": bar_length, 
            }
        }

        self._send_dict_as_midi(dict)

    def fire_selected_scene(self, ):  # noqa: E501
        # type: () -> None
        """
            Fire Selected Scene  # noqa: E501
        """

        dict = {
            "method": "fire_selected_scene",
            "args": {
                
            }
        }

        self._send_dict_as_midi(dict)

    def flatten_track(self, ):  # noqa: E501
        # type: () -> None
        """
             Flatten Track  # noqa: E501
        """

        dict = {
            "method": "flatten_track",
            "args": {
                
            }
        }

        self._send_dict_as_midi(dict)

    def get_connections(self, ):  # noqa: E501
        # type: () -> None
        """
            Get Connections  # noqa: E501
        """

        dict = {
            "method": "get_connections",
            "args": {
                
            }
        }

        self._send_dict_as_midi(dict)

    def get_set(self, path, ):  # noqa: E501
        # type: (str, ) -> None
        """
            Get Set  # noqa: E501
        """

        dict = {
            "method": "get_set",
            "args": {
                "path": path, 
            }
        }

        self._send_dict_as_midi(dict)

    def go_to_group_track(self, ):  # noqa: E501
        # type: () -> None
        """
             Go To Group Track  # noqa: E501
        """

        dict = {
            "method": "go_to_group_track",
            "args": {
                
            }
        }

        self._send_dict_as_midi(dict)

    def hide_plugins(self, ):  # noqa: E501
        # type: () -> None
        """
             Hide Plugins  # noqa: E501
        """

        dict = {
            "method": "hide_plugins",
            "args": {
                
            }
        }

        self._send_dict_as_midi(dict)

    def home(self, ):  # noqa: E501
        # type: () -> None
        """
            Home  # noqa: E501
        """

        dict = {
            "method": "home",
            "args": {
                
            }
        }

        self._send_dict_as_midi(dict)

    def load_device(self, name, create_track=False):  # noqa: E501
        # type: (str, bool, ) -> None
        """
            Load Device  # noqa: E501
        """

        dict = {
            "method": "load_device",
            "args": {
                "name": name, "create_track": create_track, 
            }
        }

        self._send_dict_as_midi(dict)

    def load_drum_rack(self, category, subcategory, ):  # noqa: E501
        # type: (str, str, ) -> None
        """
            Load Drum Rack  # noqa: E501
        """

        dict = {
            "method": "load_drum_rack",
            "args": {
                "category": category, "subcategory": subcategory, 
            }
        }

        self._send_dict_as_midi(dict)

    def load_instrument_track(self, instrument_name, ):  # noqa: E501
        # type: (str, ) -> None
        """
             Load Instrument Track  # noqa: E501
        """

        dict = {
            "method": "load_instrument_track",
            "args": {
                "instrument_name": instrument_name, 
            }
        }

        self._send_dict_as_midi(dict)

    def load_matching_track(self, ):  # noqa: E501
        # type: () -> None
        """
            Load Matching Track  # noqa: E501
        """

        dict = {
            "method": "load_matching_track",
            "args": {
                
            }
        }

        self._send_dict_as_midi(dict)

    def load_minitaur(self, ):  # noqa: E501
        # type: () -> None
        """
            Load Minitaur  # noqa: E501
        """

        dict = {
            "method": "load_minitaur",
            "args": {
                
            }
        }

        self._send_dict_as_midi(dict)

    def load_rev2(self, ):  # noqa: E501
        # type: () -> None
        """
            Load Rev2  # noqa: E501
        """

        dict = {
            "method": "load_rev2",
            "args": {
                
            }
        }

        self._send_dict_as_midi(dict)

    def load_sample_in_simpler(self, sample_path, ):  # noqa: E501
        # type: (str, ) -> None
        """
             Load Sample In Simpler  # noqa: E501
        """

        dict = {
            "method": "load_sample_in_simpler",
            "args": {
                "sample_path": sample_path, 
            }
        }

        self._send_dict_as_midi(dict)

    def log_selected(self, ):  # noqa: E501
        # type: () -> None
        """
             Log Selected  # noqa: E501
        """

        dict = {
            "method": "log_selected",
            "args": {
                
            }
        }

        self._send_dict_as_midi(dict)

    def log_song_stats(self, ):  # noqa: E501
        # type: () -> None
        """
             Log Song Stats  # noqa: E501
        """

        dict = {
            "method": "log_song_stats",
            "args": {
                
            }
        }

        self._send_dict_as_midi(dict)

    def match_clip_colors(self, ):  # noqa: E501
        # type: () -> None
        """
             Match Clip Colors  # noqa: E501
        """

        dict = {
            "method": "match_clip_colors",
            "args": {
                
            }
        }

        self._send_dict_as_midi(dict)

    def move_loop(self, forward=True):  # noqa: E501
        # type: (bool, ) -> None
        """
            Move Loop  # noqa: E501
        """

        dict = {
            "method": "move_loop",
            "args": {
                "forward": forward, 
            }
        }

        self._send_dict_as_midi(dict)

    def move_to(self, x, y, ):  # noqa: E501
        # type: (int, int, ) -> None
        """
             Move To  # noqa: E501
        """

        dict = {
            "method": "move_to",
            "args": {
                "x": x, "y": y, 
            }
        }

        self._send_dict_as_midi(dict)

    def open_in_explorer(self, path, ):  # noqa: E501
        # type: (str, ) -> None
        """
            Open In Explorer  # noqa: E501
        """

        dict = {
            "method": "open_in_explorer",
            "args": {
                "path": path, 
            }
        }

        self._send_dict_as_midi(dict)

    def open_set(self, path, ):  # noqa: E501
        # type: (str, ) -> None
        """
             Open Set  # noqa: E501
        """

        dict = {
            "method": "open_set",
            "args": {
                "path": path, 
            }
        }

        self._send_dict_as_midi(dict)

    def open_set_by_type(self, set_type, ):  # noqa: E501
        # type: (str, ) -> None
        """
            Open Set By Type  # noqa: E501
        """

        dict = {
            "method": "open_set_by_type",
            "args": {
                "set_type": set_type, 
            }
        }

        self._send_dict_as_midi(dict)

    def ping(self, ):  # noqa: E501
        # type: () -> None
        """
            Ping  # noqa: E501
        """

        dict = {
            "method": "ping",
            "args": {
                
            }
        }

        self._send_dict_as_midi(dict)

    def play_pause(self, ):  # noqa: E501
        # type: () -> None
        """
            Play Pause  # noqa: E501
        """

        dict = {
            "method": "play_pause",
            "args": {
                
            }
        }

        self._send_dict_as_midi(dict)

    def post_activate_rev2_editor(self, ):  # noqa: E501
        # type: () -> None
        """
             Post Activate Rev2 Editor  # noqa: E501
        """

        dict = {
            "method": "post_activate_rev2_editor",
            "args": {
                
            }
        }

        self._send_dict_as_midi(dict)

    def post_scene_stats(self, scene_stat, ):  # noqa: E501
        # type: (list[SceneStat], ) -> None
        """
            Post Scene Stats  # noqa: E501
        """

        dict = {
            "method": "post_scene_stats",
            "args": {
                "scene_stat": scene_stat, 
            }
        }

        self._send_dict_as_midi(dict)

    def post_set(self, ableton_set, ):  # noqa: E501
        # type: (AbletonSet, ) -> None
        """
            Post Set  # noqa: E501
        """

        dict = {
            "method": "post_set",
            "args": {
                "ableton_set": ableton_set, 
            }
        }

        self._send_dict_as_midi(dict)

    def post_set_stars(self, filename, stars_payload, ):  # noqa: E501
        # type: (str, StarsPayload, ) -> None
        """
            Post Set Stars  # noqa: E501
        """

        dict = {
            "method": "post_set_stars",
            "args": {
                "filename": filename, "stars_payload": stars_payload, 
            }
        }

        self._send_dict_as_midi(dict)

    def record_unlimited(self, ):  # noqa: E501
        # type: () -> None
        """
            Record Unlimited  # noqa: E501
        """

        dict = {
            "method": "record_unlimited",
            "args": {
                
            }
        }

        self._send_dict_as_midi(dict)

    def reload_ableton(self, ):  # noqa: E501
        # type: () -> None
        """
             Reload Ableton  # noqa: E501
        """

        dict = {
            "method": "reload_ableton",
            "args": {
                
            }
        }

        self._send_dict_as_midi(dict)

    def reload_script(self, ):  # noqa: E501
        # type: () -> None
        """
             Reload Script  # noqa: E501
        """

        dict = {
            "method": "reload_script",
            "args": {
                
            }
        }

        self._send_dict_as_midi(dict)

    def save_set(self, ):  # noqa: E501
        # type: () -> None
        """
            Save Set  # noqa: E501
        """

        dict = {
            "method": "save_set",
            "args": {
                
            }
        }

        self._send_dict_as_midi(dict)

    def save_set_as_template(self, ):  # noqa: E501
        # type: () -> None
        """
             Save Set As Template  # noqa: E501
        """

        dict = {
            "method": "save_set_as_template",
            "args": {
                
            }
        }

        self._send_dict_as_midi(dict)

    def save_track_to_sub_tracks(self, ):  # noqa: E501
        # type: () -> None
        """
             Save Track To Sub Tracks  # noqa: E501
        """

        dict = {
            "method": "save_track_to_sub_tracks",
            "args": {
                
            }
        }

        self._send_dict_as_midi(dict)

    def scroll_presets(self, direction, ):  # noqa: E501
        # type: (str, ) -> None
        """
            Scroll Presets  # noqa: E501
        """

        dict = {
            "method": "scroll_presets",
            "args": {
                "direction": direction, 
            }
        }

        self._send_dict_as_midi(dict)

    def scroll_scene_position(self, direction, ):  # noqa: E501
        # type: (str, ) -> None
        """
            Scroll Scene Position  # noqa: E501
        """

        dict = {
            "method": "scroll_scene_position",
            "args": {
                "direction": direction, 
            }
        }

        self._send_dict_as_midi(dict)

    def scroll_scene_position_fine(self, direction, ):  # noqa: E501
        # type: (str, ) -> None
        """
            Scroll Scene Position Fine  # noqa: E501
        """

        dict = {
            "method": "scroll_scene_position_fine",
            "args": {
                "direction": direction, 
            }
        }

        self._send_dict_as_midi(dict)

    def scroll_scene_tracks(self, direction, ):  # noqa: E501
        # type: (str, ) -> None
        """
            Scroll Scene Tracks  # noqa: E501
        """

        dict = {
            "method": "scroll_scene_tracks",
            "args": {
                "direction": direction, 
            }
        }

        self._send_dict_as_midi(dict)

    def scroll_scenes(self, direction, ):  # noqa: E501
        # type: (str, ) -> None
        """
            Scroll Scenes  # noqa: E501
        """

        dict = {
            "method": "scroll_scenes",
            "args": {
                "direction": direction, 
            }
        }

        self._send_dict_as_midi(dict)

    def scroll_track_volume(self, direction, ):  # noqa: E501
        # type: (str, ) -> None
        """
            Scroll Track Volume  # noqa: E501
        """

        dict = {
            "method": "scroll_track_volume",
            "args": {
                "direction": direction, 
            }
        }

        self._send_dict_as_midi(dict)

    def search(self, text, ):  # noqa: E501
        # type: (str, ) -> None
        """
            Search  # noqa: E501
        """

        dict = {
            "method": "search",
            "args": {
                "text": text, 
            }
        }

        self._send_dict_as_midi(dict)

    def select_and_copy(self, ):  # noqa: E501
        # type: () -> None
        """
            Select And Copy  # noqa: E501
        """

        dict = {
            "method": "select_and_copy",
            "args": {
                
            }
        }

        self._send_dict_as_midi(dict)

    def select_and_paste(self, ):  # noqa: E501
        # type: () -> None
        """
            Select And Paste  # noqa: E501
        """

        dict = {
            "method": "select_and_paste",
            "args": {
                
            }
        }

        self._send_dict_as_midi(dict)

    def select_clip(self, track_name, ):  # noqa: E501
        # type: (str, ) -> None
        """
            Select Clip  # noqa: E501
        """

        dict = {
            "method": "select_clip",
            "args": {
                "track_name": track_name, 
            }
        }

        self._send_dict_as_midi(dict)

    def server_state(self, ):  # noqa: E501
        # type: () -> None
        """
            Server State  # noqa: E501
        """

        dict = {
            "method": "server_state",
            "args": {
                
            }
        }

        self._send_dict_as_midi(dict)

    def set_clip_file_path(self, file_path, ):  # noqa: E501
        # type: (str, ) -> None
        """
             Set Clip File Path  # noqa: E501
        """

        dict = {
            "method": "set_clip_file_path",
            "args": {
                "file_path": file_path, 
            }
        }

        self._send_dict_as_midi(dict)

    def set_envelope_loop_length(self, length, ):  # noqa: E501
        # type: (int, ) -> None
        """
             Set Envelope Loop Length  # noqa: E501
        """

        dict = {
            "method": "set_envelope_loop_length",
            "args": {
                "length": length, 
            }
        }

        self._send_dict_as_midi(dict)

    def set_loop_length(self, bar_length, ):  # noqa: E501
        # type: (int, ) -> None
        """
            Set Loop Length  # noqa: E501
        """

        dict = {
            "method": "set_loop_length",
            "args": {
                "bar_length": bar_length, 
            }
        }

        self._send_dict_as_midi(dict)

    def sets(self, archive=False):  # noqa: E501
        # type: (bool, ) -> None
        """
            Sets  # noqa: E501
        """

        dict = {
            "method": "sets",
            "args": {
                "archive": archive, 
            }
        }

        self._send_dict_as_midi(dict)

    def show_automation(self, direction, ):  # noqa: E501
        # type: (str, ) -> None
        """
            Show Automation  # noqa: E501
        """

        dict = {
            "method": "show_automation",
            "args": {
                "direction": direction, 
            }
        }

        self._send_dict_as_midi(dict)

    def show_error(self, message, ):  # noqa: E501
        # type: (str, ) -> None
        """
            Show Error  # noqa: E501
        """

        dict = {
            "method": "show_error",
            "args": {
                "message": message, 
            }
        }

        self._send_dict_as_midi(dict)

    def show_hide_plugins(self, ):  # noqa: E501
        # type: () -> None
        """
            Show Hide Plugins  # noqa: E501
        """

        dict = {
            "method": "show_hide_plugins",
            "args": {
                
            }
        }

        self._send_dict_as_midi(dict)

    def show_info(self, message, body=''):  # noqa: E501
        # type: (str, str, ) -> None
        """
            Show Info  # noqa: E501
        """

        dict = {
            "method": "show_info",
            "args": {
                "message": message, "body": body, 
            }
        }

        self._send_dict_as_midi(dict)

    def show_instrument(self, ):  # noqa: E501
        # type: () -> None
        """
            Show Instrument  # noqa: E501
        """

        dict = {
            "method": "show_instrument",
            "args": {
                
            }
        }

        self._send_dict_as_midi(dict)

    def show_plugins(self, ):  # noqa: E501
        # type: () -> None
        """
             Show Plugins  # noqa: E501
        """

        dict = {
            "method": "show_plugins",
            "args": {
                
            }
        }

        self._send_dict_as_midi(dict)

    def show_sample_category(self, category, ):  # noqa: E501
        # type: (str, ) -> None
        """
            Show Sample Category  # noqa: E501
        """

        dict = {
            "method": "show_sample_category",
            "args": {
                "category": category, 
            }
        }

        self._send_dict_as_midi(dict)

    def show_saved_tracks(self, ):  # noqa: E501
        # type: () -> None
        """
             Show Saved Tracks  # noqa: E501
        """

        dict = {
            "method": "show_saved_tracks",
            "args": {
                
            }
        }

        self._send_dict_as_midi(dict)

    def show_success(self, message, ):  # noqa: E501
        # type: (str, ) -> None
        """
            Show Success  # noqa: E501
        """

        dict = {
            "method": "show_success",
            "args": {
                "message": message, 
            }
        }

        self._send_dict_as_midi(dict)

    def show_warning(self, message, ):  # noqa: E501
        # type: (str, ) -> None
        """
            Show Warning  # noqa: E501
        """

        dict = {
            "method": "show_warning",
            "args": {
                "message": message, 
            }
        }

        self._send_dict_as_midi(dict)

    def start_profiling_single_measurement(self, ):  # noqa: E501
        # type: () -> None
        """
            Start Profiling Single Measurement  # noqa: E501
        """

        dict = {
            "method": "start_profiling_single_measurement",
            "args": {
                
            }
        }

        self._send_dict_as_midi(dict)

    def start_set_profiling(self, ):  # noqa: E501
        # type: () -> None
        """
            Start Set Profiling  # noqa: E501
        """

        dict = {
            "method": "start_set_profiling",
            "args": {
                
            }
        }

        self._send_dict_as_midi(dict)

    def tail_logs(self, ):  # noqa: E501
        # type: () -> None
        """
            Tail Logs  # noqa: E501
        """

        dict = {
            "method": "tail_logs",
            "args": {
                
            }
        }

        self._send_dict_as_midi(dict)

    def tail_logs_raw(self, ):  # noqa: E501
        # type: () -> None
        """
            Tail Logs Raw  # noqa: E501
        """

        dict = {
            "method": "tail_logs_raw",
            "args": {
                
            }
        }

        self._send_dict_as_midi(dict)

    def toggle_ableton_button(self, x, y, activate=False):  # noqa: E501
        # type: (int, int, bool, ) -> None
        """
             Toggle Ableton Button  # noqa: E501
        """

        dict = {
            "method": "toggle_ableton_button",
            "args": {
                "x": x, "y": y, "activate": activate, 
            }
        }

        self._send_dict_as_midi(dict)

    def toggle_clip(self, track_name, ):  # noqa: E501
        # type: (str, ) -> None
        """
            Toggle Clip  # noqa: E501
        """

        dict = {
            "method": "toggle_clip",
            "args": {
                "track_name": track_name, 
            }
        }

        self._send_dict_as_midi(dict)

    def toggle_clip_notes(self, ):  # noqa: E501
        # type: () -> None
        """
             Toggle Clip Notes  # noqa: E501
        """

        dict = {
            "method": "toggle_clip_notes",
            "args": {
                
            }
        }

        self._send_dict_as_midi(dict)

    def toggle_reference(self, ):  # noqa: E501
        # type: () -> None
        """
            Toggle Reference  # noqa: E501
        """

        dict = {
            "method": "toggle_reference",
            "args": {
                
            }
        }

        self._send_dict_as_midi(dict)

    def toggle_scene_loop(self, ):  # noqa: E501
        # type: () -> None
        """
            Toggle Scene Loop  # noqa: E501
        """

        dict = {
            "method": "toggle_scene_loop",
            "args": {
                
            }
        }

        self._send_dict_as_midi(dict)
